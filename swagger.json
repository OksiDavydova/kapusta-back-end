{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Kapusta API docs",
    "description": "API documentation for GoIT project 'Kapusta'. [Backend github repository](https://github.com/OksiDavydova/kapusta-back-end)"
      },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{"url": "https://localhost:3002"}, {"url": "https://api-kapusta.herokuapp.com"}],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    }
  ],
  "paths": {
    "/api/v1/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "User is exist",
            "content": {}
          }
        }
      }
    },
    "api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email or password is wrong ",
            "content": {}
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "You have successfully logged out",
            "content": {}
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
     "/api/v1/auth/googleLogin": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "403": {
            "description": "Not registered ",
            "content": {}
          }
        }
      }
    },
       "/api/v1/auth/google-redirect": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google redirect",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "403": {
            "description": "Not registered or registered with postman",
            "content": {}
          }
        }
      }
    },
    "/api/v1/transactions": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Add transactions",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTransactionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      },
       "get": {
        "tags": ["Transaction"],
        "summary": "Get all transactions",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }    
    },      
      "/api/v1/transactions/{id}": {
      "delete": {
        "tags": ["Transaction"],
        "summary": "Delete transactions",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Transaction's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"           
          },
          "400": {
            "description": "Bad request (invalid 'date' format) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }, 
      "/api/v1/transactions/costs": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get all cost",
        "security": [{ "Bearer": [] }],
        "parameters": [ ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid 'date' format) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/v1/transactions/costs/{period}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get cost for a specific period",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Period dates. Data format: (YYYY or YYYYMM) - 4 or 6 digitals(YYYY - year, MM - month)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid 'date' format) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },  
       "/api/v1/transactions/incomes": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get all incomens",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid 'date' format) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
      "/api/v1/transactions/incomes/{period}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Get  incomens for a specific period",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Period dates. Data format: (YYYY or YYYYMM) - 4 or 6 digitals(YYYY - year, MM - month)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid 'date' format) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }, 
    "/api/v1/users/balance": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user's balance",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "New balance object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Balance update successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewBalanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/v1/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user's balance",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentBalanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body) / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/v1/users/verify": {
      "post": {
        "tags": ["User"],
        "summary": "Verify user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
       
        "responses": {
          "200": {
            "description": "Successful operation"           
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      }
    },
    "/api/v1/users/verify/{verificationToken}": {
      "post": {
        "tags": ["User"],
        "summary": "Verification token",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "verificationToken"
          }
        ],
        "security": [{ "Bearer": [] }],
        
        "responses": {
          "200": {
            "description": "Successful operation"            
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
    },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "balance":{
           "type": "integer",
           "description": "User's new balance",
           "example": 0
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "token":{
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyMDVhZmMzNzlhZWYxMmJkNTY4NDRjNyIsImlhdCI6MTY0NDUzOTk1OCwiZXhwIjoxNjQ0NTY4NzU4fQ._--fSrT_BzXZoSkpzv6AR4twLhs2Ev4DSx90mbnY86c"
        }
      }
    },
      "SignupRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
    },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "balance":{
           "type": "integer",
           "description": "User's new balance",
           "example": 0
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "token":{
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyMDVhZmMzNzlhZWYxMmJkNTY4NDRjNyIsImlhdCI6MTY0NDUzOTk1OCwiZXhwIjoxNjQ0NTY4NzU4fQ._--fSrT_BzXZoSkpzv6AR4twLhs2Ev4DSx90mbnY86c"
        }
      }
    },
     "AddTransactionsRequest": {
        "type": "object",
        "required": ["description", "date", "category", "value", "income"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Date",
            "example": "20201231"
          },
          "description": {
            "type": "string",
            "description": "Transaction description",
            "example": "Transaction description"
          },
           "category": {
            "type": "string",
            "description": "Categories",
            "example": "продукты"
          },
           "value": {
            "type": "number",
            "description": "quantity",
            "example": "2"
          },
          "income": {
            "type": "boolean",
            "description": "Which group does it belong to: costs or income",
            "default": "false",
            "example": "false"
          }
          
        }
      },   
    "TransactionsResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "date": {
            "type": "string",
            "description": "Date",
            "example": "20201231"
          },
          "description": {
            "type": "string",
            "description": "Transaction description",
            "example": "Transaction description"
          },
           "category": {
            "type": "string",
            "description": "Categories",
            "example": "продукты"
          },
           "value": {
            "type": "number",
            "description": "quantity",
            "example": "2"
          },
          "owner":{
            "type": "string",
             "description": "User`s id",
             "example": "6207d61a9eb8eb48c71ee728"
          },
          "income": {
            "type": "boolean",
            "description": "Which group does it belong to: costs or income",
            "default": "false",
            "example": "false"
          },
          "id":{
            "type": "string",
             "description": "User`s id",
             "example": "6207d61a9eb8eb48c71ee728"
          },
          "createdAt":{
            "type": "string",
             "description": "Date of creation",
             "example": "2022-02-12T15:45:30.553Z"
          },
          "updatedAt":{
            "type": "string",
             "description": "Date of update",
             "example": "2022-02-12T15:45:30.553Z"
          }

        }
      },  
    "DataResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "total": {
            "type": "number",
            "description": "Total amount",
            "example": "0"
          },
          "data": {
            "type": "array",            
            "description": "List of operations",
             "example": "[{Array of objects with data}] "                 
          }
        }
      },
    "NewBalanceRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "balance": {
            "type": "string",
            "description": "New balance",
            "example": "200"
          }
      }
    },
    "NewBalanceResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "balance": {
            "type": "string",
            "description": "New balance",
            "example": "200"
          }
      }
    },
    "CurrentBalanceResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "email": {
            "type": "string",
            "description": "User`s email",
            "example": "Natascha14257@mail.com"
          },
           "id": {
            "type": "string",
            "description": "User`s id",
            "example": "6205afa279aef12bd56844c3"
          },
          "balance": {
            "type": "string",
            "description": "Current balance",
            "example": "200"
          }
      }
    }       
      }           
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }    
  }



